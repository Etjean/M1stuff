knitr::opts_chunk$set(echo = TRUE)
f <- function(x){return (2*x-3)**2}
optim(f)
optim(0, f)
optim(0, f)
curve(f, from=-10, to=10)
curve(f, from=-50, to=50)
curve(f(x), from=-50, to=50)
plot(x, f(x))
f <- function(x){return (2*x-3)**2}
# curve(expr, from=-50, to=50)
x=seq(-10, 10, 0.1)
plot(x, f(x))
optim(0, f)
f <- function(x){return (2*x-3)**2}
# curve(expr, from=-50, to=50)
x=seq(-10, 10, 0.1)
plot(x, f(x), "l")
optim(0, f)
curve((2*x-3)**2, from=-50, to=50)
curve(f, from=-50, to=50)
f <- function(x){return (2*x-3)**2}
curve((2*x-3)**2, from=-50, to=50)
optim(0, f)
f <- function(x){return (2*x-3)**2}
curve((2*x-3)**2, from=-10, to=10)
optim(0, f)
f <- function(x){return (2*x-3)**2}
curve((2*x-3)**2, from=-10, to=10)
optim(0, f)
optim(1800, f)
f <- function(x){return ((2*x-3)**2)}
curve((2*x-3)**2, from=-10, to=10)
optim(1800, f)
g <- function(x, y){return(f(x)+(y-1)**2)}
f <- function(x){return((2*x-3)**2)}
curve((2*x-3)**2, from=-10, to=10)
g <- function(x, y){return(f(x)+(y-1)**2)}
optim(1800, f)
curve((2*x-3)**2, from=-10, to=10)
curve((2*x-3)**2+(y-1)**2), from=-10, to=10)
curve((2*x-3)**2+(y-1)**2, from=-10, to=10)
contour((2*x-3)**2+(y-1)**2, from=-10, to=10)
contour((2*x-3)**2+(y-1)**2, from=-10, to=10)
persp((2*x-3)**2+(y-1)**2, from=-10, to=10)
optim(c(100, 100), g)
persp3D((2*x-3)**2+(y-1)**2, from=-10, to=10)
curve(f, from=-10, to=10)
curve(f,col="orange", from=-10, to=10)
z = g(x, y)
optim(c(100, 100), g)
g <- function(x, y){return(f(x)+(y-1)**2)}
library(rgl)
z = (0, nrow=100, ncol=100)
z = (0, nrow=100, ncol=100)
z = matrix(0, nrow=100, ncol=100)
z[i, j] = g(i, j)
for (i in 1:100){
for (j in 1:100){
z[i, j] = g(i, j)
}
}
persp3d(z)
for (i in -50:50){
for (j in -50:50){
z[i, j] = g(i, j)
}
}
persp3d(z)
persp3d(z, col="orange")
for (i in seq(-50, 50, len=nrow(z))){
for (j in seq(-50, 50, len=ncol(z))){
z[i, j] = g(i, j)
}
}
persp3d(z, col="orange")
z[i, j] = g(i-50, j-50)
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i, j] = g(i-50, j-50)
}
}
persp3d(z, col="orange")
optim(c(100, 100), g)
optim(c(100, 100), g)
optim(c(100, 100), g)
g <- function(x){return(f(x[1])+(x[2]-1)**2)}
z = matrix(0, nrow=100, ncol=100)
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i, j] = g(i-50, j-50)
}
}
optim(c(100, 100), g)
h <- function(x){return(-exp(-0.5*((x[1]+3)**2+(x[2]+3)**2)) - exp(-0.5*(x[1]**2+x[2]**2)) - exp(-0.5*((x-5)**2+(y-5)**2)))}
optim(c(100, 100), h)
h <- function(x){return(-exp(-0.5*((x[1]+3)**2+(x[2]+3)**2)) - exp(-0.5*(x[1]**2+x[2]**2)) - exp(-0.5*((x[1]-5)**2+(x[2]-5)**2)))}
optim(c(100, 100), h)
x = seq(-30, 30, 0.1)
z = out(x, y, g)
z = outer(x, y, g)
y = seq(-30, 30, 0.1)
z = outer(x, y, g)
nction(x){return(f(x[1])+(x[2]-1)**2)}
g <- function(x){return(f(x[1])+(x[2]-1)**2)}
g <- function(x){return(f(x)+(y-1)**2)}
x = seq(-30, 30, 0.1)
y = seq(-30, 30, 0.1)
z = outer(x, y, g2)
library(rgl)
f <- function(x){return((2*x-3)**2)}
curve(f,col="orange", from=-10, to=10)
g1 <- function(x){return(f(x[1])+(x[2]-1)**2)}
g2 <- function(x, y){return(f(x)+(y-1)**2)}
x = seq(-30, 30, 0.1)
y = seq(-30, 30, 0.1)
z = outer(x, y, g2)
persp3d(z, col="orange")
h1 <- function(x){return(-exp(-0.5*((x[1]+3)**2+(x[2]+3)**2)) - exp(-0.5*(x[1]**2+x[2]**2)) - exp(-0.5*((x[1]-5)**2+(x[2]-5)**2)))}
h2 <- function(x, y){return(-exp(-0.5*((x+3)**2+(y+3)**2)) - exp(-0.5*(x**2+y**2)) - exp(-0.5*((x-5)**2+(y-5)**2)))}
optim(1800, f)
optim(c(100, 100), g1)
optim(c(100, 100), h1)
z = outer(x, y, h2)
persp3d(z, col="orange")
library(rgl)
f <- function(x){return((2*x-3)**2)}
curve(f,col="orange", from=-10, to=10)
g1 <- function(x){return(f(x[1])+(x[2]-1)**2)}
g2 <- function(x, y){return(f(x)+(y-1)**2)}
x = seq(-30, 30, 0.1)
y = seq(-30, 30, 0.1)
z = outer(x, y, g2)
persp3d(z, col="orange")
h1 <- function(x){return(-exp(-0.5*((x[1]+3)**2+(x[2]+3)**2)) - exp(-0.5*(x[1]**2+x[2]**2)) - exp(-0.5*((x[1]-5)**2+(x[2]-5)**2)))}
h2 <- function(x, y){return(-exp(-0.5*((x+3)**2+(y+3)**2)) - exp(-0.5*(x**2+y**2)) - exp(-0.5*((x-5)**2+(y-5)**2)))}
x = seq(-30, 30, 0.1)
y = seq(-30, 30, 0.1)
z = outer(x, y, h2)
persp3d(z, col="orange")
optim(1800, f)
optim(c(100, 100), g1)
optim(c(100, 100), h1)
optim(c(0, 0), h1)
x = seq(-30, 30, 1)
y = seq(-30, 30, 1)
z = outer(x, y, h2)
persp3d(z, col="orange")
x = seq(-30, 30, 0.1)
y = seq(-30, 30, 0.1)
z = outer(x, y, h2)
persp3d(z, col="orange")
x = seq(-10, 10, 0.1)
y = seq(-10, 10, 0.1)
z = outer(x, y, h2)
persp3d(z, col="orange")
persp3d(x, y, z, col="orange")
optim(c(1, 1), h1)
optim(c(3, 3), h1)
optim(c(-2, -2), h1)
optim(c(10, 10), h1)
optim(c(50, 50), h1)
plot(x, ytrue)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
plot(x, ytrue)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
plot(x, yobs)
moindreCarre <- function(y){}
s = 0
for (i in x){
s += (yobs[i]-y)**2
moindreCarre <- function(y){
s = 0
for (i in x){
s += (yobs[i]-y)**2
moindreCarre <- function(y){
s = 0
for (i in x){
s = s+(yobs[i]-y)**2
}
return(s)
}
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
plot(x, yobs)
s = 0
moindreCarre <- function(y){
s = 0
for (i in x){
s = s + (y[1]+i*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
optim(c(1, 1), moindreCarre, method = "CG")
moindreCarre <- function(y){
s = 0
for (i in x){
s = s + (y[1]+i*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
plot(x, yobs)
s = 0
moindreCarre <- function(y){
s = 0
for (i in x){
s = s + (y[1]+i*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
plot(x, yobs)
s = 0
moindreCarre <- function(y){
s = 0
for (i in 1:20){
s = s + (y[1]+i*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
plot(x, yobs)
s = 0
moindreCarre <- function(y){
s = 0
for (i in 1:20){
s = s + (y[1]+i*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+i*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
optim(c(1, 1), moindreCarre)
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
opt = optim(c(1, 1), moindreCarre)
plot(x, yobs)
abline(a=opt$par[1], b=opt$par[2], col="orange")
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
opt = optim(c(1, 1), moindreCarre)
plot(x, yobs)
plot(x, ytrue, "p", col="grey")
abline(a=opt$par[1], b=opt$par[2], col="orange")
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
opt = optim(c(1, 1), moindreCarre)
plot(x, yobs)
plot(x, ytrue, "p", col="grey", add=T)
abline(a=opt$par[1], b=opt$par[2], col="orange")
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
opt = optim(c(1, 1), moindreCarre)
plot(x, yobs)
plot(x, ytrue, "o", col="grey", add=T)
abline(a=opt$par[1], b=opt$par[2], col="orange")
x=0:20
ytrue=3*x+10
yobs=ytrue+rnorm(21, mean=0, sd=3)
moindreCarre <- function(y){
s = 0
for (i in 1:length(yobs)){
s = s + (y[1]+x[i]*y[2]-yobs[i])**2
}
return(s)
}
opt = optim(c(1, 1), moindreCarre)
plot(x, yobs)
par(new=T)
plot(x, ytrue, "o", col="grey", add=T)
abline(a=opt$par[1], b=opt$par[2], col="orange")
data( ChickWeight )
chick.1 <- ChickWeight[ChickWeight$Chick == 1, ]
data(ChickWeight)
chick.1 <- ChickWeight[ChickWeight$Chick == 1,]
w <- function(a, t, s) {return (a/(1+exp(-(t-tmoy)/s)))}
w <- function(t) {return (a/(1+exp(-(t-tmoy)/s)))}
