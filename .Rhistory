A%*%X
A%*%X
A
X
A
library(nnet)
library(e1071)
dt = read.table("ogawa_827.txt", header=F)
dt = read.table("ogawa_827.txt", header=F)
dt
image(dt)
image(as.matrix(dt))
image(t(as.matrix(dt))
image(t(as.matrix(dt)))
image(as.matrix(dt))
image(as.matrix(dt), col=heat.colors(1))
image(as.matrix(dt), col=heat.colors(100))
image(as.matrix(dt), col=rainbow())
image(as.matrix(dt), col=rainbow(1))
image(as.matrix(dt), col=rainbow(2))
image(as.matrix(dt), col=rainbow(20))
image(as.matrix(dt), col=rainbow(50))
image(as.matrix(dt), col=rainbow(1000))
image(as.matrix(dt))
image(as.matrix(dt), col=brewer.pal(50))
image(as.matrix(dt), col=cm.colors(50))
image(as.matrix(dt), col=cm.colors(3))
image(as.matrix(dt), col=cm.colors(10))
image(as.matrix(dt), col=gray)
image(as.matrix(dt), col=gray(3))
image(as.matrix(dt), col=gray(0.5))
bp = brewer.pal(11,"RdBu")
bp = brewer.pal(11,"RdBu")
library(RColorBrewer)
library(colourschemes)
bp = brewer.pal(11,"RdBu")
library(colourschemes)
library(RColorBrewer)
bp = brewer.pal(11,"RdBu")
# library(colourschemes)
# cs = rampInterpolate(c(-10,10),bp)
image(as.matrix(dt), col=cm.colors(50, ))
image(as.matrix(dt), col=bp)
image(as.matrix(dt), col=brewer.pal(50))
display.brewer.all()
display.brewer.all()
display.brewer.all()
display.brewer.all()
display.brewer.all()
image(as.matrix(dt), col=brewer.pal(50, "RdGn"))
display.brewer.all()
image(as.matrix(dt), col=brewer.pal(50, "RdGyGn"))
image(as.matrix(dt), col=brewer.pal(50, "RdGyGn"))
display.brewer.all()
image(as.matrix(dt), col=brewer.pal(50, "PRGn"))
library(RColorBrewer)
# bp = brewer.pal(11,"RdBu")
# library(colourschemes)
# cs = rampInterpolate(c(-10,10),bp)
image(as.matrix(dt), col=brewer.pal(50, "PRGn"))
display.brewer.all()
a = Na
az
;
NA
a = NA
a
sample(dt, 5)
randint(0, 10)
runif(0,10)
runif(1, 0, 10)
sample(4, 8)
sample(4)
sample(5)
sample(8, 1)
sample(8, 1)
sample(8, 1)
sample(8, 1)
sample(8, 1)
sample(8, 1)
sample(8, 1)
sample(8, 1)
sample(8, 1)
sample(8, 1)
size(dt)
sz(dt)
dim(dt)
len(dt)
length(dt)
elts(dt)
elt
nb(dt)
N = ncol(dt)*nrow(dt)
n = round(N/100)
i = sample(nrow(dt), n, replace=T)
j = sample(ncol(dt), n, replace=T)
index = c(i, j)
index
dt[i,]
dt[i,j]
dt[i,j]
dim(dt[i,j])
dt[1, 3]
dt[c(4,1), 3]
dt[c(4,1), c(3, 5)]
i
j
dt = as.matrix(read.table("ogawa_827.txt", header=F))
dt
image(dt, col=brewer.pal(50, "PRGn"))
N = ncol(dt)*nrow(dt)
n = round(1*N/100)
print(e)
for (k in 1:n){
for (e in dt){
print(e)
}
}
sample(e, 3)
print(e)
sample(dt, 3)
N = nrow(dt)*ncol(dt)
n = round(1*N/100)
for (k in 1:n){
i = sample(nrow(dt), 1)
j = sample(ncol(dt), 1)
index=c(i, j)
dt[index]=NA
}
dt
N = nrow(dt)*ncol(dt)
n = round(1*N/100)
for (k in 1:n){
i = sample(nrow(dt), 1)
j = sample(ncol(dt), 1)
print(j)
index=c(i, j)
dt[index]=NA
}
dt
N = nrow(dt)*ncol(dt)
n = round(1*N/100)
for (k in 1:n){
i = sample(nrow(dt), 1)
j = sample(ncol(dt), 1)
dt[i, j]=NA
}
dt
dt = as.matrix(read.table("ogawa_827.txt", header=F))
N = nrow(dt)*ncol(dt)
n = round(1*N/100)
for (k in 1:n){
i = sample(nrow(dt), 1)
j = sample(ncol(dt), 1)
dt[i, j]=NA
}
dt
N
n
d = read.table("donnees.txt", header=F)
d = read.table("donnees.txt", header=F)
d = read.table("donnees.txt", header=F)
d = read.table("ogawa_827.txt", header=F)
#dim(d)
#head(d)
image(as.matrix(d), col=(0:15)/15)
valcol = matrix(NA,dim(d)[1],dim(d)[2])
for (i in 1:dim(d)[1]) {
for (j in 1:dim(d)[2]) {
val <- d[i,j]
valcol[i,j] <- (val + abs(min(val)))/max(val + abs(min(val)))
}
}
val = d$V1
valcol = (val + abs(min(val)))/max(val + abs(min(val)))
plot(d$V1, pch = 15, col = rgb(0, 0, valcol))
val = d$V1
valcol <- (val + abs(min(val)))/max(val + abs(min(val)))
#http://neocarto.hypotheses.org/1458
library(RColorBrewer)
d = read.table("donnees.txt", header=F)
#http://neocarto.hypotheses.org/1458
library(RColorBrewer)
d = read.table("ogawa_827.txt", header=F)
source("Palettes.R")
d = read.table("donnees.txt", header=F)
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
#plot(hc,hang=-0.1, cex=0.0005)
#rect.hclust(hc, k=Ngroupes)
groupes = cutree(hc, k=Ngroupes)
Ngroupes = 3
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
n = round(1*N/100)
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,(max(t[1,]) + max(t[2,]) + max(t[3,]))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,(max(t[1,]) + max(t[2,]) + max(t[3,]))/sum(t))
t
Ngroupes = 3
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
n = round(30*N/100)
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,(max(t[1,]) + max(t[2,]) + max(t[3,]))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
Ngroupes = 3
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
n = round(30*N/100)
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,(max(t[,1]) + max(t[,2]) + max(t[,3]))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
groupes
groupes2
t
apply(t, max, 2)
apply(t, 2, max)
sum(apply(t, 2, max))
(max(t[,1]) + max(t[,2]) + max(t[,3]))/sum(t)
sum(apply(t, 2, max))/sum(t)
Ngroupes = 7
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
n = round(30*N/100)
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,sum(apply(t, 2, max))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
Ngroupes = 19
percent_missing = 30
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
n = round(percent_missing*N/100)
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,sum(apply(t, 2, max))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
Ngroupes = 19
percent_missing = 30
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
# n = round(percent_missing*N/100)
n = 40
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,sum(apply(t, 2, max))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
Ngroupes = 19
percent_missing = 5
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
n = round(percent_missing*N/100)
# n = 40
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,sum(apply(t, 2, max))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
Ngroupes = 19
percent_missing = 1
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
# n = round(percent_missing*N/100)
n = 40
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = 0
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,sum(apply(t, 2, max))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
c(1, 2, NA, 4)
a = c(1, 2, NA, 4)
a
is.na(a)
sum(a)
a
a
is.na(a)
sum(a)
dm
which(dm == NA)
which(dm)
which(dm == 0)
which(dm == NA)
which(dm == "NA")
which(is.na(dm) == T)
is.na(dm)
dm = donneesManquantes(d)
is.na(dm)
dm = donneesManquantes(d)
is.na(dm)
donneesManquantes <- function(d) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
# n = round(percent_missing*N/100)
n = 40
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = NA
}
return(dm)
}
dm = donneesManquantes(d)
is.na(dm)
which(dm == NA)
which(is.na(dm) == T)
which(is.na(dm) == T, arr.ind=T)
anyNA(dm)
Ngroupes = 19
percent_missing = 1
donneesManquantes <- function(d, val) {
dm = read.table("ogawa_827.txt", header=F)
N = nrow(d)*ncol(d)
# n = round(percent_missing*N/100)
n = 40
for (k in 1:n){
i = sample(nrow(d), 1)
j = sample(ncol(d), 1)
dm[i, j] = val
}
return(dm)
}
d = read.table("ogawa_827.txt", header=F)
hc = hclust(dist(d), method="ward.D2")
groupes = cutree(hc, k=Ngroupes)
CPP = c()
for (i in 1:100) {
dm = donneesManquantes(d,0)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,sum(apply(t, 2, max))/sum(t))
}
CPPmoy = sum(CPP)/length(CPP)
print(CPPmoy)
dm = donneesManquantes(d,0)
hc2 = hclust(dist(dm),method="ward.D2")
groupes2 = cutree(hc2, k = Ngroupes)
t = table(groupes,groupes2)
CPP = c(CPP,(max(t[1,]) + max(t[2,]) + max(t[3,]))/sum(t))
dm = donneesManquantes(d,NA)
which(is.na(dm) == T, arr.ind=T)
anyNA(dm)
a = c(1, 2, 3)
b = c(4, 4, 4)
a*b
1/b
a = c(2, 3, 1)
sort(a)
a
for (k in a){print(k)}
dm = donneesManquantes(d, NA)
print(anyNA(d))
for (v in 1:nrow(dm)){
if (anyNA(dm[v,])){
nas = which(is.na(dm[v,])==T)
distances = c()
for (w in (1:nrow(dm))[-v,]){
dis = dist(dm[v, -nas], dm[w, -nas])
distances = c(distances, dis)
}
ws = which(distances == sort(distances)[1:k])
for (na in nas){
s = sum(1/distances[ws])
sw = sum((1/distances[ws])*dm[ws,na])
dm[v, na] = sw / s
}
}
}
