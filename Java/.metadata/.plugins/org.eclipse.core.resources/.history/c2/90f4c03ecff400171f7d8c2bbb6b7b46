import java.io.IOException;
import java.util.Iterator;
import java.util.Random;
import java.util.Scanner;


public class Prototype {
	//Attributes
	private VueGenerale v;
	private Matrice g;
	private Joueur[] players;
	private ImageSimple[] pions;
	
	//Constructor
	public Prototype() throws IOException{
		g = new Matrice("./ExempleFichierGrapheVilles.tex");
		v = new VueExemple("./Images/pandemicExemple.jpg", g.L, g.H);
		
		//Initialisation des villes
		for (City c : g.cities){
			v.setCase(c.name, c.posX, c.posY);
		}
		Scanner Sc = new Scanner(System.in);
		
		//Initialisation des joueurs
			//Nombre de joueurs
		int nJ =0;
		while (nJ < 2 || nJ > 4) {
				System.out.println("Combien de joueurs ? Entrez un nombre de 2 à 4");
				try {nJ = Sc.nextInt();}
				catch (Exception e) {Sc.next(); System.out.println("Entrée incorrecte");}
		}
		players = new Joueur[nJ];
		pions = new ImageSimple[nJ];
			//Noms des joueurs
		for (int i=0; i<nJ; i++){
			System.out.println("Nom du joueur "+(i+1)+" :");
			String nameJ = Sc.next();
			City posJ = g.cities[g.getNumNoeud("Atlanta")];
			players[i] = new Joueur(i, nameJ, posJ);
			ImageSimple pion;
			if (i == 0){pion = new ImageSimple("./Images/pion1orange.png",25,25);}
			else if (i == 1){pion = new ImageSimple("./Images/pion1violet.png",25,25);}
			else if (i == 2){pion = new ImageSimple("./Images/pion1vert.png",25,25);}
			else if (i == 3){pion = new ImageSimple("./Images/pion1jaune.png",25,25);}
			else {pion = new ImageSimple("./Images/pion1.png",25,25);}
			pions[i] = pion;
	        v.positionneEnVille("Atlanta", pion);
		}
		
		//Initialisation des maladies
		System.out.println("Le monde est touché par une épidémie !! Collaborez pour éviter à tout prix sa propagation !");
		Random rd = new Random();
		for (int lvl=1; lvl<4; lvl++){
			int i = 0;
			while (i<3){
				int j = rd.nextInt(g.nbN);
				if (g.cities[j].lvlDisease == 0){
					g.cities[j].lvlDisease = lvl;
					ImageSimple maladie = new ImageSimple("./Images/maladie"+lvl+".png",25,25);
					v.positionneEnVille(g.cities[j].name, maladie);
					i++;
				}
			}
		}
	}
	
	
	
	
	//Methods
	public static void tourDeJeu(Joueur j){
		Scanner Sc = new Scanner(System.in);
		int nActions = 4;
		while (nActions > 0){
			System.out.println("Joueur "+j.name+", à toi de jouer ! : "+nActions+" actions restantes.\n");
			System.out.println("1 : déplacement dans une ville voisine");
			System.out.println("2 : recherche de remède");
			if (j.pos.lvlDisease > 0) System.out.println("3 : soin de la maladie");
			System.out.println("");
			System.out.println("");
			System.out.println("");
			System.out.println("");
			int act = 0;
			try {act = Sc.nextInt();}
			catch (Exception e) {Sc.next(); System.out.println("Entrée incorrecte");}
			
			//déplacement
			if (act == 1) {
				System.out.println("Joueur "+j.name+" : Dans quelle ville voulez-vous vous déplacer ?");
				Iterator<City> villesVoisines = g.getVillesVoisines(j.pos);
				while (villesVoisines.hasNext()){
					int i = 1;
					System.out.println(i+" : "+villesVoisines.next().name);
					i++;
				}
			
				
				
				
			}
			//soin de la maladie
			
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
}
